{"version":3,"sources":["../../../lib/deployment/parse.js"],"names":["fs","require","_","SDK","getServerlessFilePath","simpleGit","packageJsonVersion","version","git","silent","parseDeploymentData","ctx","status","error","archived","service","sls","deployment","Deployment","accountId","provider","getAccountId","serverlessFileName","processedInput","options","config","servicePath","serverlessFile","readFile","toString","cfnStack","request","StackName","naming","getStackName","requestError","providerError","statusCode","logsRole","find","Stacks","Outputs","OutputKey","logsRoleArn","OutputValue","outputs","entries","outputKey","outputValue","startsWith","cfnOutput","slice","set","versionFramework","versionEnterprisePlugin","tenantUid","appUid","tenantName","tenant","appName","app","serviceName","stageName","getStage","regionName","getRegion","deploymentUid","type","aws","layers","plugins","modules","custom","safeguards","state","safeguardsResults","secrets","Array","from","secretsUsed","vcs","isGit","checkIsRepo","err","branch","current","origin","raw","trim","remotes","getRemotes","originUrl","filter","name","refs","fetch","commit","gitShowError","message","includes","commitMessage","committerEmail","relativePath","Object","keys","functions","fnName","fn","deployedFunctionName","events","setFunction","description","timeout","arn","handler","memorySize","memory","runtime","environment","role","onError","awsKmsKeyArn","tags","vpc","sub","subDetails","apigResource","endsWith","match","getServiceEndpointRegex","apiId","split","path","http","method","cors","integration","restApiId","assign","websocketApiId","setSubscription","function","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/*\n * Save Deployment\n * - This uses the new deployment data model.\n */\n\nconst fs = require('fs-extra');\nconst _ = require('lodash');\nconst SDK = require('@serverless/platform-sdk');\nconst getServerlessFilePath = require('./getServerlessFilePath');\nconst simpleGit = require('simple-git/promise');\nconst { version: packageJsonVersion } = require('../../package');\n\nconst git = simpleGit();\ngit.silent(true);\n\n/*\n * Parse Deployment Data\n * - Takes data from the Framework and formats it into our data model\n */\n\nconst parseDeploymentData = async (ctx, status = 'success', error = null, archived = false) => {\n  const { service } = ctx.sls;\n  const deployment = new SDK.Deployment();\n\n  const accountId = await ctx.provider.getAccountId();\n  const serverlessFileName = await getServerlessFilePath(\n    ctx.sls.processedInput.options.config,\n    ctx.sls.config.servicePath\n  );\n  const serverlessFile = (await fs.readFile(serverlessFileName)).toString();\n  /*\n   * Add deployment data...\n   */\n\n  if (!archived) {\n    const cfnStack = await (async () => {\n      try {\n        return await ctx.provider.request('CloudFormation', 'describeStacks', {\n          StackName: ctx.provider.naming.getStackName(),\n        });\n      } catch (requestError) {\n        const { providerError } = requestError;\n        if (providerError) {\n          // 400 means stack was not deployed yet (first deployment failed)\n          if (providerError.statusCode === 400) return null;\n        }\n\n        throw requestError;\n      }\n    })();\n\n    // get log access role info\n    const logsRole =\n      cfnStack &&\n      _.find(\n        cfnStack.Stacks[0].Outputs,\n        ({ OutputKey }) => OutputKey === 'EnterpriseLogAccessIamRole'\n      );\n    const logsRoleArn = logsRole && logsRole.OutputValue;\n\n    // get any CFN outputs\n    const outputs = service.outputs || {};\n    for (const [outputKey, outputValue] of _.entries(outputs)) {\n      if (outputValue.startsWith('CFN!?')) {\n        if (cfnStack) {\n          const cfnOutput = _.find(\n            cfnStack.Stacks[0].Outputs,\n            ({ OutputKey }) => OutputKey === `${outputValue.slice(5)}`\n          );\n          outputs[outputKey] = cfnOutput.OutputValue;\n        } else {\n          delete outputs[outputKey];\n        }\n      }\n    }\n\n    deployment.set({\n      serverlessFile,\n      serverlessFileName,\n      versionFramework: ctx.sls.version,\n      versionEnterprisePlugin: packageJsonVersion,\n      tenantUid: service.tenantUid,\n      appUid: service.appUid,\n      tenantName: service.tenant,\n      appName: service.app,\n      serviceName: service.service,\n      stageName: ctx.provider.getStage(),\n      regionName: ctx.provider.getRegion(),\n      deploymentUid: ctx.deploymentUid,\n      logsRoleArn,\n      archived,\n      status,\n      provider: {\n        type: 'aws',\n        aws: { accountId },\n        // environment: Object.keys(service.provider.environment || {})\n      },\n      layers: service.layers || {},\n      plugins: service.plugins ? service.plugins.modules || service.plugins : [],\n      custom: service.custom || {},\n      safeguards: ctx.state.safeguardsResults,\n      secrets: Array.from(ctx.state.secretsUsed),\n      outputs,\n      error,\n    });\n\n    const vcs = { type: null };\n    // Add VCS info\n    try {\n      const isGit = await git.checkIsRepo();\n      if (isGit) {\n        vcs.type = 'git';\n      }\n    } catch (err) {\n      // pass\n    }\n    if (vcs.type === 'git') {\n      const branch = await git.branch();\n      if (branch.current) {\n        let origin = await git.raw(['config', `branch.${branch.current}.remote`]);\n        if (origin) {\n          origin = origin.trim();\n          const remotes = await git.getRemotes();\n          vcs.originUrl = remotes.filter(({ name }) => name === origin)[0].refs.fetch;\n        }\n        vcs.branch = branch.current;\n      }\n      try {\n        vcs.commit = (await git.raw(['show', '-s', '--format=%H', branch.current || ''])).trim();\n      } catch (gitShowError) {\n        // Most likely a fresh repo (no commits)\n        if (!gitShowError.message.includes('fatal:')) throw gitShowError;\n      }\n      if (vcs.commit) {\n        vcs.commitMessage = (await git.raw([\n          'show',\n          '-s',\n          '--format=%B',\n          branch.current || '',\n        ])).trim();\n        vcs.committerEmail = (await git.raw([\n          'show',\n          '-s',\n          '--format=%ae',\n          branch.current || '',\n        ])).trim();\n      }\n      vcs.relativePath = (await git.raw(['rev-parse', '--show-prefix'])).trim();\n    }\n    deployment.set({ vcs });\n\n    /*\n     * Add this deployment's functions...\n     */\n\n    for (const fnName of Object.keys(service.functions)) {\n      const fn = service.functions[fnName];\n      const deployedFunctionName =\n        fn.name || `${service.service}-${ctx.provider.getStage()}-${fnName}`;\n      fn.events = fn.events || [];\n\n      // Function\n      deployment.setFunction({\n        name: deployedFunctionName,\n        description: fn.description || null,\n        timeout: fn.timeout,\n        type: 'awsLambda',\n        arn: `arn:aws:lambda:${ctx.provider.getRegion()}:${accountId}:function:${deployedFunctionName}`,\n        custom: {\n          handler: fn.handler,\n          memorySize: fn.memory,\n          runtime: fn.runtime,\n          environment: Object.keys(fn.environment || {}),\n          role: fn.role,\n          onError: fn.onError,\n          awsKmsKeyArn: fn.awsKmsKeyArn,\n          tags: fn.tags || {},\n          vpc: fn.vpc || {},\n          layers: fn.layers || [],\n          name: fn.name || fnName,\n        },\n      });\n\n      /*\n       * Add this functions's subscriptions...\n       */\n\n      for (const sub of fn.events) {\n        let subDetails = {};\n        let type;\n        if (typeof sub === 'string') {\n          type = sub;\n        } else {\n          type = Object.keys(sub)[0];\n          if (type === 'http' && cfnStack) {\n            const apigResource = _.find(\n              cfnStack.Stacks[0].Outputs,\n              ({ OutputKey }) =>\n                !OutputKey.endsWith('Websocket') &&\n                OutputKey.match(ctx.provider.naming.getServiceEndpointRegex())\n            );\n            const apiId =\n              apigResource && apigResource.OutputValue.split('https://')[1].split('.')[0];\n            subDetails = {\n              path: sub.http.path,\n              method: sub.http.method,\n              cors: sub.http.cors,\n              integration: sub.http.integration,\n              restApiId: apiId,\n            };\n          } else if (sub[type] instanceof Object) {\n            Object.assign(subDetails, sub[type]);\n          } else {\n            Object.assign(subDetails, { [type]: sub[type] });\n          }\n          if (type === 'websocket' && cfnStack) {\n            const apigResource = _.find(\n              cfnStack.Stacks[0].Outputs,\n              ({ OutputKey }) =>\n                OutputKey.endsWith('Websocket') &&\n                OutputKey.match(ctx.provider.naming.getServiceEndpointRegex())\n            );\n            const apiId = apigResource && apigResource.OutputValue.split('wss://')[1].split('.')[0];\n            subDetails.websocketApiId = apiId;\n          }\n        }\n\n        deployment.setSubscription({ type, function: deployedFunctionName, ...subDetails });\n      }\n    }\n  } else {\n    deployment.set({\n      versionFramework: ctx.sls.version,\n      versionEnterprisePlugin: packageJsonVersion,\n      tenantUid: service.tenantUid,\n      appUid: service.appUid,\n      tenantName: service.tenant,\n      appName: service.app,\n      serviceName: service.service,\n      stageName: ctx.provider.getStage(),\n      regionName: ctx.provider.getRegion(),\n      archived,\n      status,\n      secrets: Array.from(ctx.state.secretsUsed),\n      error,\n    });\n  }\n\n  return deployment;\n};\n\nmodule.exports = parseDeploymentData;\n"],"file":"parse.js"}